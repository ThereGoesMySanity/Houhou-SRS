<?xml version="1.0" ?>
<Styles xmlns="https://github.com/avaloniaui"
                    xmlns:controls="clr-namespace:Kanji.Interface.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
                    xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
                    xmlns:converters="clr-namespace:Kanji.Interface.Converters"
                    xmlns:models="clr-namespace:Kanji.Interface.Models"
                    xmlns:actors="clr-namespace:Kanji.Interface.Actors"
                    xmlns:business="clr-namespace:Kanji.Interface.Business"
                    xmlns:utility="clr-namespace:Kanji.Interface.Utilities"
                    xmlns:cmodels="clr-namespace:Kanji.Common.Models;assembly=Kanji.Common">
  <Styles.Resources>
    <ResourceDictionary>
      <converters:KanjiToStringConverter x:Key="KanjiToStringConverter"/>
      <converters:KanjiToColorConverter x:Key="KanjiToColorConverter"/>
      <converters:KanjiReadingToListConverter x:Key="KanjiReadingToListConverter"/>
      <converters:VocabMeaningsToStringConverter x:Key="VocabMeaningsToStringConverter"/>
      <!--<converters:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter" />-->
      <converters:VocabToColorConverter x:Key="VocabToColorConverter"/>
      <converters:IntegerToOrdinalStringConverter x:Key="IntegerToOrdinalStringConverter"/>
      <converters:VocabCategoriesToStringConverter x:Key="VocabCategoriesToStringConverter"/>
      <converters:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter"/>
      <converters:DataTriggerValueBindingConverter x:Key="DataTriggerValueBindingConverter"/>
      <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
      <converters:KanjiWritingToCharactersConverter x:Key="KanjiWritingToCharactersConverter"/>
      <converters:PercentageToStringConverter x:Key="PercentageToStringConverter"/>
      <converters:ComparablesToBooleanConverter x:Key="ComparablesToBooleanConverter"/>
      <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
      <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
      <converters:SrsEntryToStringConverter x:Key="SrsEntryToStringConverter"/>
      <converters:StringAppendConverter x:Key="StringAppendConverter"/>
      <converters:BooleanInverterConverter x:Key="BooleanInverterConverter"/>
      <converters:StringFormatConverter x:Key="StringFormatConverter"/>
      <converters:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
      <converters:SrsEntryImportResultConverter x:Key="SrsEntryImportResultConverter"/>
      <converters:VocabFrequencyToStringConverter x:Key="VocabFrequencyToStringConverter"/>
      <converters:VocabFrequencyToBrushConverter x:Key="VocabFrequencyToBrushConverter"/>
      <converters:JlptLevelToBrushConverter x:Key="JlptLevelToBrushConverter"/>
      <converters:IsFirstItemInContainerConverter x:Key="IsFirstItemInContainerConverter"/>
      <converters:KanjiToReadingListConverter x:Key="KanjiToReadingListConverter"/>
      <converters:WkLevelToBrushConverter x:Key="WkLevelToBrushConverter"/>
      <converters:WikipediaRankToBrushConverter x:Key="WikipediaRankToBrushConverter"/>
      <converters:ExtendedVocabToVariantListConverter x:Key="ExtendedVocabToVariantListConverter"/>
      <converters:NullValueToVisibilityConverter x:Key="NullValueToVisibilityConverter"/>
      <converters:BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

      <!-- ObjectDataProviders -->
      <!--
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="KanjiFilterModeEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="models:KanjiFilterModeEnum" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ComparisonOperatorEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cmodels:ComparisonOperatorEnum" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="CsvImportNoTypeBehaviorEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="models:CsvImportNoTypeBehavior" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>-->

      <!-- Colors -->
      <Color x:Key="KanjiTabGradientStart">#1888FF</Color>
      <Color x:Key="KanjiTabGradientEnd">#094488</Color>
      <Color x:Key="KanjiTabFade">#FFD5DBFF</Color>

      <Color x:Key="SrsTabGradientStart">#26A861</Color>
      <Color x:Key="SrsTabGradientEnd">#0D5D31</Color>
      <Color x:Key="SrsTabFade">#5825A760</Color>

      <Color x:Key="VocabTabGradientStart">#8822CC</Color>
      <Color x:Key="VocabTabGradientEnd">#44116A</Color>
      <Color x:Key="VocabTabFade">#CFC4ED</Color>

      <Color x:Key="SettingsTabGradientStart">#505050</Color>
      <Color x:Key="SettingsTabGradientEnd">#222222</Color>
      <Color x:Key="SettingsTabFade">#44000000</Color>

      <Color x:Key="HomeTabGradientStart">#CE874A</Color>
      <Color x:Key="HomeTabGradientEnd">#82562F</Color>
      <Color x:Key="HomeTabFade">#FFE3C1</Color>

      <!-- Brushes -->
      <SolidColorBrush x:Key="LegendTextBrush" Color="#AA000000"/>
      <SolidColorBrush x:Key="FadedBorderBrush" Color="#66000000"/>
      <SolidColorBrush x:Key="HomeTabGradientEndBrush" Color="{StaticResource HomeTabGradientEnd}"/>
      <SolidColorBrush x:Key="SrsTabGradientEndBrush" Color="{StaticResource SrsTabGradientEnd}"/>
      <SolidColorBrush x:Key="KanjiTabGradientEndBrush" Color="{StaticResource KanjiTabGradientEnd}"/>
      <SolidColorBrush x:Key="VocabTabGradientEndBrush" Color="{StaticResource VocabTabGradientEnd}"/>
      <SolidColorBrush x:Key="SettingsTabGradientEndBrush" Color="{StaticResource SettingsTabGradientEnd}"/>

      <SolidColorBrush x:Key="HomeTabFadeBrush" Color="{StaticResource HomeTabFade}"/>
      <SolidColorBrush x:Key="SrsTabFadeBrush" Color="{StaticResource SrsTabFade}"/>
      <SolidColorBrush x:Key="KanjiTabFadeBrush" Color="{StaticResource KanjiTabFade}"/>
      <SolidColorBrush x:Key="VocabTabFadeBrush" Color="{StaticResource VocabTabFade}"/>
      <SolidColorBrush x:Key="SettingsTabFadeBrush" Color="{StaticResource SettingsTabFade}"/>
      <LinearGradientBrush x:Key="KanjiTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource KanjiTabGradientStart}" Offset="1"/>
        <GradientStop Color="{StaticResource KanjiTabGradientEnd}"/>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="SrsTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource SrsTabGradientStart}" Offset="1"/>
        <GradientStop Color="{StaticResource SrsTabGradientEnd}"/>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="VocabTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource VocabTabGradientStart}" Offset="1"/>
        <GradientStop Color="{StaticResource VocabTabGradientEnd}"/>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="SettingsTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource SettingsTabGradientStart}" Offset="1"/>
        <GradientStop Color="{StaticResource SettingsTabGradientEnd}"/>
      </LinearGradientBrush>
      <LinearGradientBrush x:Key="HomeTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource HomeTabGradientStart}" Offset="1"/>
        <GradientStop Color="{StaticResource HomeTabGradientEnd}"/>
      </LinearGradientBrush>

      <!-- TEMPLATES -->
      <ControlTemplate x:Key="PaddinglessListbox" TargetType="{x:Type ListBox}">
        <!-- The paddingless listbox is a listbox that does not have any padding.
        The original listbox control has an unremovable padding so that's why this is required. -->
        <Border Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" UseLayoutRounding="True">
          <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
            <ItemsPresenter UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
          </ScrollViewer>
        </Border>
        <!--TODO: Can't get controlbrushkey and IsGrouping doesn't exist in Avalonia-->
        <!--<i:Interaction.Behaviors>
        <ia:DataTriggerBehavior Binding="{Binding IsEnabled}" Value="False">
          <ia:ChangePropertyAction TargetObject="{Binding #Bd}" PropertyName="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        </ia:DataTriggerBehavior>
      </i:Interaction.Behaviors>-->
        <!--<Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>-->
      </ControlTemplate>

      <ControlTemplate TargetType="ListBoxItem" x:Key="MiniRadicalInListImageTemplate">
        <Border Height="26" Width="26" CornerRadius="3" BorderBrush="Black" Background="#86469B" BorderThickness="1" Padding="3" Margin="0 0 4 4">
          <Image Source="{Binding ImageUri}" Stretch="Uniform"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
      </ControlTemplate>

      <ControlTemplate TargetType="ListBoxItem" x:Key="MiniRadicalInListTextTemplate">
        <Border Height="26" Width="26" CornerRadius="3" BorderBrush="Black" Background="#86469B" BorderThickness="1" Padding="6" Margin="0 0 4 4">
          <TextBlock HorizontalAlignment="Center" Foreground="White" FontSize="12" VerticalAlignment="Center" Text="{Binding Path=Character}"/>
        </Border>
      </ControlTemplate>

      <ControlTemplate TargetType="ListBoxItem" x:Key="RadicalInListTextTemplate">
        <Border Classes="RadicalInListBorder" Background="{Binding $parent[ListBoxItem].Background}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Radical character shadow -->
            <TextBlock HorizontalAlignment="Center" FontSize="32" Foreground="Black" Text="{Binding Reference.Character}">
              <TextBlock.RenderTransform>
                <TranslateTransform X="-1" Y="-1"/>
              </TextBlock.RenderTransform>
            </TextBlock>
            <!-- Radical character -->
            <TextBlock HorizontalAlignment="Center" FontSize="32" Text="{Binding Reference.Character}"/>

            <!-- Radical name -->
            <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="{Binding Reference.Name}" TextWrapping="Wrap" FontSize="12"/>
          </Grid>
        </Border>
      </ControlTemplate>

      <ControlTemplate TargetType="ListBoxItem" x:Key="RadicalInListImageTemplate">
        <Border Classes="RadicalInListBorder" Background="{Binding $parent[ListBoxItem].Background}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Radical image -->
            <Image Source="{Binding Reference.ImageUri}" Stretch="None" />

            <!-- Radical name -->
            <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="{Binding Reference.Name}" TextWrapping="Wrap" FontSize="12"/>
          </Grid>
        </Border>
      </ControlTemplate>

      <ControlTemplate x:Key="ItemsPerLevelListboxItem" TargetType="ListBoxItem">
        <Border Margin="0 0 1 0" Height="50" Background="{Binding Level.ParentGroup.Color, Converter={StaticResource ColorToBrushConverter}}"
                Padding="4" CornerRadius="0" BorderBrush="{StaticResource FadedBorderBrush}"
                HorizontalAlignment="Stretch">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="40*"/>
              <RowDefinition Height="60*"/>
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="1">
              <TextBlock Foreground="White" Text="{Binding ItemCount}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Viewbox>
            <Border CornerRadius="0" Background="#33FFFFFF" BorderThickness="1" BorderBrush="#66FFFFFF" HorizontalAlignment="Stretch" Padding="6 0">
              <Viewbox>
                <TextBlock Foreground="White" Text="{Binding Level.Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
              </Viewbox>
            </Border>
          </Grid>
        </Border>
      </ControlTemplate>

      <ControlTemplate x:Key="ItemsPerLevelGroupListboxItem" TargetType="ListBoxItem">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Border Background="{Binding Group.Color, Converter={StaticResource ColorToBrushConverter}}" Height="85" Padding="5" BorderThickness="0" Margin="0">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="4*"/>
              </Grid.RowDefinitions>

              <Viewbox>
                <Viewbox.RenderTransform>
                  <TranslateTransform X="-2" Y="-2"/>
                </Viewbox.RenderTransform>
                <TextBlock TextWrapping="Wrap" Text="{Binding ItemCount}" Foreground="Black" FontWeight="SemiBold"/>
              </Viewbox>
              <Viewbox>
                <TextBlock TextWrapping="Wrap" Text="{Binding ItemCount}" Foreground="White" FontWeight="SemiBold"/>
              </Viewbox>

              <Viewbox Grid.Row="1">
                <TextBlock TextWrapping="Wrap" Text="{Binding Group.Name}" Foreground="White"/>
              </Viewbox>
            </Grid>
          </Border>
          <ListBox HorizontalAlignment="Stretch" Grid.Row="1" Classes="ItemsPerLevelListbox" Items="{Binding Levels}"/>
        </Grid>
      </ControlTemplate>

    </ResourceDictionary>
  </Styles.Resources>
  <!-- STYLES -->

    <!-- PAGE ROOTS -->
    <Style Selector="Border.PageBorder">
        <Setter Property="Padding" Value="10"/>
    </Style>
    <Style Selector="Border.PageSeparator">
        <Setter Property="Height" Value="8"/>
    </Style>

    <Style Selector="Border.HomePageBorder">
        <Setter Property="Background" Value="{StaticResource HomeTabFadeBrush}"/>
    </Style>
    <Style Selector="Border.HomePageSeparator">
        <Setter Property="Background" Value="{StaticResource HomeTabGradientEndBrush}"/>
    </Style>

    <Style Selector="Border.SrsPageBorder">
        <Setter Property="Background" Value="{StaticResource SrsTabFadeBrush}"/>
    </Style>
    <Style Selector="Border.SrsPageSeparator">
        <Setter Property="Background" Value="{StaticResource SrsTabGradientEndBrush}"/>
    </Style>

    <Style Selector="Border.KanjiPageBorder">
        <Setter Property="Background" Value="{StaticResource KanjiTabFadeBrush}"/>
    </Style>
    <Style Selector="Border.KanjiPageSeparator">
        <Setter Property="Background" Value="{StaticResource KanjiTabGradientEndBrush}"/>
    </Style>

    <Style Selector="Border.VocabPageBorder">
        <Setter Property="Background" Value="{StaticResource VocabTabFadeBrush}"/>
    </Style>
    <Style Selector="Border.VocabPageSeparator">
        <Setter Property="Background" Value="{StaticResource VocabTabGradientEndBrush}"/>
    </Style>

    <Style Selector="Border.SettingsPageBorder">
        <Setter Property="Background" Value="{StaticResource SettingsTabFadeBrush}"/>
    </Style>
    <Style Selector="Border.SettingsPageSeparator">
        <Setter Property="Background" Value="{StaticResource SettingsTabGradientEndBrush}"/>
    </Style>

    <!-- Misc labels & textboxes -->
    <Style Selector="TextBox.LabelBox" >
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style Selector="TextBlock.LegendText" >
        <Setter Property="Foreground" Value="{StaticResource LegendTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

  <Style Selector="TextBox.ErrorLabel">
    <Setter Property="Foreground" Value="DarkRed"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontWeight" Value="Bold"/>
  </Style>
    <Style Selector="TextBox.ErrorLabel[Text=]">
      <Setter Property="IsVisible" Value="false" />
    </Style>

    <!-- KANJI READING COMPONENTS -->
  <Style Selector="TextBox.ReadingLabelTitle">
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="BorderBrush" Value="#22000000"/>
    <Setter Property="BorderThickness" Value="1,1,1,0"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>

  <Style Selector="TextBox.ReadingLabel">
    <Setter Property="FontSize" Value="14"/>
    <!--<Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.2" />
            </Setter.Value>
        </Setter>-->
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <Style Selector="TextBox.VocabReadingLabel">
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="HorizontalAlignment" Value="Left"/>
    <!--TODO: unused?-->
    <!--<Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.2"/>
            </Setter.Value>
        </Setter>-->
  </Style>
  <Style Selector="TextBox.VocabReadingLabel:pointerover">
    <Setter Property="FontSize" Value="28" />
  </Style>

  <Style Selector="TextBox.VocabCategoriesLabel"/>
  <Style Selector="TextBox.VocabCategoriesLabel[Text=]">
        <Setter Property="IsVisible" Value="False" />
  </Style>
    
    <Style Selector="ListBox.KanjiReadingListbox" >
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  <Style Selector="ListBox.KanjiReadingListbox ListBoxItem">
    <!-- Style of the list box items in the reading listbox -->
    <Setter Property="Background" Value="#FFFFFFFF"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border BorderBrush="#CC000000" BorderThickness="1" Background="{TemplateBinding Background}" Padding="2">
            <!--<i:Interaction.Behaviors>
              <ia:DataTriggerBehavior Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={StaticResource IsFirstItemInContainerConverter}}" Value="True">
                --><!--First item in the list. Add a margin--><!--
                <ia:ChangePropertyAction PropertyName="Margin" Value="60 0 5 1"/>
              </ia:DataTriggerBehavior>
              <ia:EventTriggerBehavior EventName="PreviewMouseLeftButtonUp">
                <ia:InvokeCommandAction Command="{Binding DataContext.FilterReadingCommand,
                                                      RelativeSource={RelativeSource AncestorType={x:Type controls:KanjiDetails}}}" CommandParameter="{Binding HiraganaReading}"/>
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>-->
            <TextBox Classes="ReadingLabel LabelBox" Text="{Binding ModifiedReading}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="ListBox.KanjiReadingListbox ListBoxItem:pointerover">
    <Setter Property="Background" Value="#FFE0E0E0" />
  </Style>

  <Style Selector="ListBox.KanjiKunYomiReadingListbox" InheritanceParent="{StaticResource KanjiReadingListbox}" >
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
    </Style>

    <!-- ACTION BUTTONS -->
  <Style Selector="Button.ActionButton">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#774B8CFF" Offset="0.1"/>
          <GradientStop Color="#77447FEA" Offset="0.49"/>
          <GradientStop Color="#773D70D9" Offset="0.5"/>
          <GradientStop Color="#77365DC6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="#99042880"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Cursor="Hand">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="1*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="16*"/>
                <RowDefinition Height="2*"/>
              </Grid.RowDefinitions><!--StretchDirection="UpOnly"-->
              <Viewbox Grid.Column="1" Grid.Row="1" MaxHeight="30" MinHeight="15">
                <Viewbox.RenderTransform>
                  <TranslateTransform X="-1" Y="-1"/>
                </Viewbox.RenderTransform>
                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black"/>
              </Viewbox><!--StretchDirection="UpOnly"-->
              <Viewbox Grid.Column="1" Grid.Row="1"  MaxHeight="30" MinHeight="15">
                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
              </Viewbox>
            </Grid>
          </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    <Setter Property="FontSize" Value="8"/>
    <Setter Property="Foreground" Value="#33FFFFFF"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Height" Value="25"/>
  </Style>
  <Style Selector="Button.ActionButton:pointerover">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
          <GradientStop Color="#FF346FDA" Offset="0.49"/>
          <GradientStop Color="#FF2D60C9" Offset="0.5"/>
          <GradientStop Color="#FF264DB6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="White" />

  </Style>
  <Style Selector="Button.ActionButton[IsPressed=True]">
    <Setter Property="BorderThickness" Value="3,2,1,1" />
  </Style>
  <Style Selector="Button.ActionButton[IsEnabled=False]">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#DD7BBCFF" Offset="0.1"/>
          <GradientStop Color="#DD74AFEA" Offset="0.49"/>
          <GradientStop Color="#DD6DA0D9" Offset="0.5"/>
          <GradientStop Color="#DD668DC6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="LightGray" />
  </Style>

  <!--<Style Selector="Button.KanjiSrsEditActionButton" >
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#774B8CFF" Offset="0.1"/>
                    <GradientStop Color="#77447FEA" Offset="0.49"/>
                    <GradientStop Color="#773D70D9" Offset="0.5"/>
                    <GradientStop Color="#77365DC6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#99042880" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}" Cursor="Hand">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="8*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="16*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Column="1" Grid.Row="1" StretchDirection="UpOnly" MaxHeight="30" MinHeight="15">
                                <Viewbox.RenderTransform>
                                    <TranslateTransform X="-1"  Y="-1" />
                                </Viewbox.RenderTransform>
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" />
                            </Viewbox>
                            <Viewbox Grid.Column="1" Grid.Row="1" StretchDirection="UpOnly" MaxHeight="30" MinHeight="15">
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
                                        <GradientStop Color="#FF346FDA" Offset="0.49"/>
                                        <GradientStop Color="#FF2D60C9" Offset="0.5"/>
                                        <GradientStop Color="#FF264DB6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderThickness" Value="3,2,1,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#DD7BBCFF" Offset="0.1"/>
                                        <GradientStop Color="#DD74AFEA" Offset="0.49"/>
                                        <GradientStop Color="#DD6DA0D9" Offset="0.5"/>
                                        <GradientStop Color="#DD668DC6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontSize" Value="8" />
        <Setter Property="Foreground" Value="#33FFFFFF" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="25" />
    </Style>-->

  <Style Selector="Button.BigActionButton">
    <Setter Property="Height" Value="NaN"/>
  </Style>

  <Style Selector="Button.BrightActionButton">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#DD3B7CEF" Offset="0.1"/>
          <GradientStop Color="#DD346FDA" Offset="0.49"/>
          <GradientStop Color="#DD2D60C9" Offset="0.5"/>
          <GradientStop Color="#DD264DB6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="#BBFFFFFF"/>
  </Style>

  <Style Selector="Button.MiniActionButton">
    <Setter Property="Height" Value="20"/>
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#004B8CFF" Offset="0.1"/>
          <GradientStop Color="#00447FEA" Offset="0.49"/>
          <GradientStop Color="#003D70D9" Offset="0.5"/>
          <GradientStop Color="#00365DC6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="Transparent"/>
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="BorderBrush" Value="#55042880"/>
  </Style>
  <Style Selector="Button.MiniActionButton[IsEnabled=False]">
    <Setter Property="Background" Value="#22000000" />
  </Style>

    <Style Selector="Button.ImageActionButton" >
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#774B8CFF" Offset="0.1"/>
                    <GradientStop Color="#77447FEA" Offset="0.49"/>
                    <GradientStop Color="#773D70D9" Offset="0.5"/>
                    <GradientStop Color="#77365DC6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#99042880"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Cursor="Hand">
                        <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="5,4"/>
    </Style>
  <Style Selector="Button.ImageActionButton:pointerover">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
          <GradientStop Color="#FF346FDA" Offset="0.49"/>
          <GradientStop Color="#FF2D60C9" Offset="0.5"/>
          <GradientStop Color="#FF264DB6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="Button.ImageActionButton[IsPressed=True]">
    <Setter Property="BorderThickness" Value="3,2,1,1" />
  </Style>
  <Style Selector="Button.ImageActionButton[Tag=True]">
    <Setter Property="BorderThickness" Value="3,2,1,1" />
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
          <GradientStop Color="#FF346FDA" Offset="0.49"/>
          <GradientStop Color="#FF2D60C9" Offset="0.5"/>
          <GradientStop Color="#FF264DB6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="Button.ImageActionButton[IsEnabled=False]">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
          <GradientStop Color="#DD7BBCFF" Offset="0.1"/>
          <GradientStop Color="#DD74AFEA" Offset="0.49"/>
          <GradientStop Color="#DD6DA0D9" Offset="0.5"/>
          <GradientStop Color="#DD668DC6" Offset="0.9"/>
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Button.VocabAudioButton">
    <Setter Property="Content" Value="Listen"/>
    <Setter Property="IsEnabled" Value="False"/>
    <Setter Property="FontSize" Value="10"/>
    <Setter Property="ToolTip.Tip" Value="Attempt to retrieve and play the audio for this word."/>
    <Setter Property="Opacity" Value="0.35"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Command" Value="{Binding PlayVocabAudioCommand, Source={x:Static business:AudioBusiness.Instance}}"/>
    <Setter Property="CommandParameter" Value="{Binding Audio}"/>
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Audio.State}" Value="Loading">
        <ia:ChangePropertyAction PropertyName="Content" Value="(Loading)"/>
      </ia:DataTriggerBehavior>
      <ia:DataTriggerBehavior Binding="{Binding Audio.State}" Value="Playing">
        <ia:ChangePropertyAction PropertyName="Content" Value="(Playing)"/>
      </ia:DataTriggerBehavior>
      <ia:DataTriggerBehavior Binding="{Binding Audio.State}" Value="Failed">
        <ia:ChangePropertyAction PropertyName="Content" Value="(Failed)"/>
        <ia:ChangePropertyAction PropertyName="BorderBrush" Value="DarkRed"/>
      </ia:DataTriggerBehavior>
      <ia:DataTriggerBehavior Binding="{Binding Audio.State}" Value="Unavailable">
        <ia:ChangePropertyAction PropertyName="Content" Value="(No audio)"/>
        <ia:ChangePropertyAction PropertyName="BorderBrush" Value="DarkRed"/>
      </ia:DataTriggerBehavior>
      <utility:MultiDataTriggerBehavior>
        <utility:MultiDataTriggerBehavior.Conditions>
          <utility:Condition Binding="{Binding IsBusy, Source={x:Static business:AudioBusiness.Instance}}" Value="False"/>
          <utility:Condition Binding="{Binding Audio.State}" Value="Unknown"/>
        </utility:MultiDataTriggerBehavior.Conditions>
        <ia:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
      </utility:MultiDataTriggerBehavior>
      <utility:MultiDataTriggerBehavior>
        <utility:MultiDataTriggerBehavior.Conditions>
          <utility:Condition Binding="{Binding IsBusy, Source={x:Static business:AudioBusiness.Instance}}" Value="False"/>
          <utility:Condition Binding="{Binding Audio.State}" Value="Playable"/>
        </utility:MultiDataTriggerBehavior.Conditions>
        <ia:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
      </utility:MultiDataTriggerBehavior>
      <utility:MultiDataTriggerBehavior>
        <utility:MultiDataTriggerBehavior.Conditions>
          <utility:Condition Binding="{Binding IsBusy, Source={x:Static business:AudioBusiness.Instance}}" Value="False"/>
          <utility:Condition Binding="{Binding Audio.State}" Value="Failed"/>
        </utility:MultiDataTriggerBehavior.Conditions>
        <ia:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
      </utility:MultiDataTriggerBehavior>
    </i:Interaction.Behaviors>
  </Style>
  <Style Selector="Button.VocabAudioButton:pointerover">
    <Setter Property="Opacity" Value="1" />
    <Setter Property="BorderBrush" Value="#99042880" />
  </Style>

  <Style Selector="TextBox.KanjiMeaningLabel">
    <Setter Property="BorderThickness" Value="0 0 0 1"/>
    <Setter Property="BorderBrush" Value="Black"/>
    <Setter Property="Margin" Value="0 0 0 5"/>
    <Setter Property="FontSize" Value="16"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
  </Style>

  <Style Selector="TextBox.KanjiTitle">
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="BorderBrush" Value="Black"/>
    <Setter Property="Background" Value="White"/>
    <Setter Property="Margin" Value="5 5 5 0"/>
    <Setter Property="Width" Value="90"/>
    <Setter Property="Height" Value="87"/>
    <Setter Property="VerticalAlignment" Value="Top"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="TextWrapping" Value="NoWrap"/>
    <Setter Property="TextAlignment" Value="Center"/>
    <Setter Property="FontSize" Value="64"/>
    <Setter Property="FontFamily" Value="../Data/Fonts/NotoSansCJKjp-Thin.otf#Noto Sans CJK JP Thin"/>
  </Style>
    <Style Selector="ListBox.MiniRadicalList ListBoxItem" >
      <i:Interaction.Behaviors>
        <ia:DataTriggerBehavior Binding="{Binding HasImage}" Value="True">
          <ia:ChangePropertyAction PropertyName="Template" Value="{StaticResource MiniRadicalInListImageTemplate}"/>
        </ia:DataTriggerBehavior>
        <ia:DataTriggerBehavior Binding="{Binding HasImage}" Value="False">
          <ia:ChangePropertyAction PropertyName="Template" Value="{StaticResource MiniRadicalInListTextTemplate}"/>
        </ia:DataTriggerBehavior>
      </i:Interaction.Behaviors>
        <Setter Property="ToolTip.Tip" Value="{Binding Path=Name}"/>
    </Style>

    <Style Selector="Border.RadicalInListBorder" >
        <Setter Property="Height" Value="70"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style Selector="ListBox.RadicalList" >
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!--<controls:VirtualizingWrapPanel />-->
                    <WrapPanel HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  <Style Selector="ListBox.RadicalList ListBoxItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#86469B"/>
      <i:Interaction.Behaviors>
        <ia:DataTriggerBehavior Binding="{Binding Reference.HasImage}" Value="True">
          <ia:ChangePropertyAction PropertyName="Template" Value="{StaticResource RadicalInListImageTemplate}"/>
        </ia:DataTriggerBehavior>
        <ia:DataTriggerBehavior Binding="{Binding Reference.HasImage}" Value="False">
          <ia:ChangePropertyAction PropertyName="Template" Value="{StaticResource RadicalInListTextTemplate}"/>
        </ia:DataTriggerBehavior>
        <ia:DataTriggerBehavior Binding="{Binding IsRelevant}" Value="False">
          <ia:ChangePropertyAction PropertyName="Background" Value="#333333"/>
        </ia:DataTriggerBehavior>
        <ia:DataTriggerBehavior Binding="{Binding IsAvailable}" Value="Hidden">
          <ia:ChangePropertyAction PropertyName="Background" Value="#333333"/>
        </ia:DataTriggerBehavior>
        <ia:DataTriggerBehavior Binding="{Binding IsAvailable}" Value="SemiHidden">
          <ia:ChangePropertyAction PropertyName="Opacity" Value="0.5"/>
        </ia:DataTriggerBehavior>
        <ia:DataTriggerBehavior Binding="{Binding IsSelected}" Value="SemiHidden">
          <ia:ChangePropertyAction PropertyName="Background" Value="#FF2277CB"/>
        </ia:DataTriggerBehavior>
      </i:Interaction.Behaviors>
    </Style>
  <Style Selector="ListBox.RadicalList ListBoxItem:pointerover[IsSelected=false]">
    <Setter Property="Background" Value="#8646DD" />
  </Style>
  <!--<Style Selector="ListBox.RadicalList :is(ILogicalScrollable)">
    <Setter Property="IsLogicalScrollEnabled" Value="False" />
  </Style>-->

    <Style Selector="ListBox.KanjiList" >
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  <!--<Style Selector="ListBox.KanjiList :is(ILogicalScrollable)">
    <Setter Property="IsLogicalScrollEnabled" Value="False" />
  </Style>-->
  <Style Selector="ListBox.KanjiList ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="1,1,1,1" BorderBrush="Gray" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Kanji character -->
                            <TextBlock Grid.RowSpan="2" Text="{Binding DbKanji.Character, Mode=OneWay}">
                                <TextBlock.Styles>
                                    <Style Selector="TextBlock">
                                        <Setter Property="FontSize" Value="26"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="FontFamily" Value="../Data/Fonts/NotoSansCJKjp-Thin.otf#Noto Sans CJK JP Thin"/>
                                    </Style>
                                </TextBlock.Styles>
                            </TextBlock>

                            <!-- Kanji meaning label -->
                            <TextBlock Grid.Column="1" Text="{Binding DbKanji,
                                  Mode=OneWay, Converter={StaticResource KanjiToStringConverter},
                                  ConverterParameter={x:Static converters:KanjiToStringConversionType.Short},
                                  }">
                                <TextBlock.Styles>
                                    <Style Selector="TextBlock">
                                        <Setter Property="FontSize" Value="16"/>
                                    </Style>
                                </TextBlock.Styles>
                            </TextBlock>

                            <!-- Kanji most used rank label -->
                            <TextBlock Grid.Column="1" Grid.Row="1">
                                <TextBlock.Styles>
                                    <Style Selector="TextBlock">
                                        <Setter Property="Text" Value="{Binding Path=DbKanji.MostUsedRank,
                                              Converter={StaticResource IntegerToOrdinalStringConverter},
                                              
                                              StringFormat=\{0\} most used kanji.}"/>
                                      <i:Interaction.Behaviors>
                                        <ia:DataTriggerBehavior Binding="{Binding DbKanji.MostUsedRank}" Value="{x:Null}">
                                          <ia:ChangePropertyAction Value="Rare kanji" PropertyName="Text"/>
                                        </ia:DataTriggerBehavior>
                                      </i:Interaction.Behaviors>
                                    </Style>
                                </TextBlock.Styles>
                            </TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#000000FF"/>
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding DbKanji.MostUsedRank}" Value="{x:Null}">
        <ia:ChangePropertyAction Value="LightGray" PropertyName="Background"/>
      </ia:DataTriggerBehavior>
      <ia:DataTriggerBehavior Binding="{Binding IsStyled}" Value="True">
        <ia:ChangePropertyAction Value="10,0,0,0" PropertyName="Margin"/>
        <ia:ChangePropertyAction Value="#220000FF" PropertyName="Background"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
  </Style>
  <Style Selector="ListBox.KanjiList ListBoxItem[IsSelected=true]">
    <Setter Property="Margin" Value="10,0,0,0" />
    <Setter Property="Background" Value="#220000FF" />
  </Style>
  <Style Selector="ListBox.KanjiList ListBoxItem:pointerover">
    <Setter Property="Background" Value="#220000FF" />
  </Style>


    <!-- Vocab -->

    <Style Selector="TextBox.VocabMeaningRichTextBox" >
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

<!--TODO-->
    <!--<Style Selector="Paragraph">
        <Setter Property="Margin" Value="0"/>
    </Style>-->

    <!-- Kanji writing listbox -->
    <Style Selector="ListBox.VocabKanjiWritingListbox" >
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="4 0 4 0"/>
        <Setter Property="Margin" Value="0 0 4 0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
      <Setter Property="FontSize" Value="26"/>
    </Style>
    <Style Selector="ListBox.VocabKanjiWritingListbox ListBoxItem">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <TextBox Text="{Binding Character}" FontFamily="../Data/Fonts/NotoSansCJKjp-Thin.otf#Noto Sans CJK JP Thin" ToolTip.Tip="{Binding Kanji, Converter={StaticResource KanjiToStringConverter},
                                            ConverterParameter={x:Static converters:KanjiToStringConversionType.Short}}" Classes="LabelBox">
              <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="PreviewMouseLeftButtonUp">
                  <ia:InvokeCommandAction Command="{Binding DataContext.KanjiNavigationCommand,
                                                        RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}"/>
                </ia:EventTriggerBehavior>
                <ia:DataTriggerBehavior Binding="{Binding IsMarginalReading}" Value="True">
                  <ia:ChangePropertyAction PropertyName="Opacity" Value="0.33" />
                </ia:DataTriggerBehavior>
                <ia:DataTriggerBehavior Binding="{TemplateBinding Tag}" Value="True">
                  <!--<ia:ChangePropertyAction PropertyName="TextDecorations" Value="Underline" />-->
                  <ia:ChangePropertyAction Value="Hand" PropertyName="Cursor"/>
                  <ia:ChangePropertyAction Value="Blue" PropertyName="Foreground"/>
                  <ia:ChangePropertyAction Value="1" PropertyName="Opacity"/>
                </ia:DataTriggerBehavior>
                <utility:MultiDataTriggerBehavior>
                  <utility:MultiDataTriggerBehavior.Conditions>
                    <utility:Condition Binding="{Binding HasKanji}" Value="True" />
                    <utility:Condition Binding="{Binding $self.IsPointerOver}" Value="True" />
                  </utility:MultiDataTriggerBehavior.Conditions>
                  <utility:MultiDataTriggerBehavior.Actions>
                    <ia:ChangePropertyAction PropertyName="Tag" Value="True" />
                  </utility:MultiDataTriggerBehavior.Actions>
                </utility:MultiDataTriggerBehavior>
              </i:Interaction.Behaviors>
            </TextBox>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  <!-- Vocab writing part listbox -->
    <Style Selector="ListBox.VocabWritingPartListbox" >
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBox">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
              <ItemsPresenter/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Padding" Value="3,0"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <WrapPanel/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="FontSize" Value="14"/>
    </Style>
  <Style Selector="ListBox.VocabWritingPartListbox ListBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="18"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ListBox Grid.Row="1" Classes="VocabKanjiWritingListbox" Items="{Binding Characters, Mode=OneWay}" Name="KWListbox"/>
            <Border>
              <i:Interaction.Behaviors>
                <ia:DataTriggerBehavior Binding="{Binding $parent[ListBox].DataContext.HasUndeterminedFurigana}" Value="True">
                  <ia:ChangePropertyAction PropertyName="BorderThickness" Value="0 0 0 1" />
                  <ia:ChangePropertyAction PropertyName="BorderBrush" Value="#22000000" />
                </ia:DataTriggerBehavior>
              </i:Interaction.Behaviors>
              <Viewbox MaxWidth="{Binding ElementName=KWListbox, Path=ActualWidth}">
                <TextBox Text="{Binding Furigana, Mode=OneWay}" HorizontalContentAlignment="Center" Padding="0" Margin="0" Classes="LabelBox">
                  <ToolTip.Tip>
                    <TextBlock Text="{Binding Furigana}" FontSize="16"/>
                  </ToolTip.Tip>
                </TextBox>
              </Viewbox>
            </Border>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!-- VOCAB -->

  <Style Selector="TextBlock.VocabVariantText">
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Variant.IsMain}" Value="True">
        <ia:ChangePropertyAction Value="SemiBold" PropertyName="FontWeight"/>
        <ia:ChangePropertyAction Value="#AAAA0000" PropertyName="Foreground"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
    <Setter Property="Foreground" Value="#777777" />
    <Setter Property="FontSize" Value="12" />
  </Style>
  <Style Selector="TextBlock.VocabVariantText:pointerover">
    <Setter Property="Foreground" Value="Black" />
  </Style>

  <Style Selector="ListBox.VocabVariantList" >
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <ItemsPresenter/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Margin" Value="0 0 0 3"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <WrapPanel Orientation="Horizontal"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  <Style Selector="ListBox.VocabVariantList ListBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <ContentControl Content="{Binding .}">
            <ContentControl.DataTemplates>
              <DataTemplate DataType="{x:Type models:VocabVariant}">
                <Border Cursor="Hand" BorderBrush="{StaticResource FadedBorderBrush}" BorderThickness="1" Margin="5 2 0 0" Padding="4 0 4 0">
                  <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="PreviewMouseLeftButtonUp">
                      <ia:InvokeCommandAction Command="{Binding DataContext.SwitchVocabCommand,
                                                                  RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}"/>
                    </ia:EventTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding Variant.IsMain}" Value="True">
                      <!--<Setter Property="Background" Value="#6444FF55" />-->
                    </ia:DataTriggerBehavior>
                  </i:Interaction.Behaviors>
                  <Border.Styles>
                    <Style Selector="Border">
                      <Setter Property="Background" Value="#44FFFFFF"/>
                    </Style>
                  </Border.Styles>

                  <StackPanel Orientation="Horizontal">
                    <TextBlock Classes="VocabVariantText">
                      <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} 【{1}】">
                          <MultiBinding.Bindings>
                            <Binding Path="Variant.KanjiWriting"/>
                            <Binding Path="Variant.KanaWriting"/>
                          </MultiBinding.Bindings>
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>
                  </StackPanel>
                </Border>
              </DataTemplate>
              <DataTemplate DataType="{x:Type sys:String}">
                <Border BorderBrush="#CC000000" BorderThickness="1" Margin="5 2 0 0" Background="#AA777777" Padding="4 0 4 0">
                  <TextBlock Classes="LegendText" Text="{Binding .}" Foreground="White"/>
                </Border>
              </DataTemplate>
            </ContentControl.DataTemplates>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<Style Selector="ListBox.VocabList :is(ILogicalScrollable)">
    <Setter Property="IsLogicalScrollEnabled" Value="False" />
  </Style>-->
    <Style Selector="ListBox.VocabList" >
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  <Style Selector="ListBox.VocabList ListBoxItem">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
              <Border>
                <Border.Styles>
                  <!--the questionable nested doubly-styled border-->
                  <Style Selector="Border:pointerover">
                    <Setter Property="Background" Value="#22000000" />
                  </Style>
                </Border.Styles>
                <Border BorderThickness="0,0,0,1" VerticalAlignment="Center" BorderBrush="#FF878787">
                  <Border.Styles>
                    <Style Selector="Border">
                      <i:Interaction.Behaviors>
                        <!-- When IsCommon -->
                        <ia:DataTriggerBehavior Binding="{Binding DbVocab.IsCommon}" Value="True">
                          <ia:ChangePropertyAction Value="#3F91EF5E" PropertyName="Background"/>
                        </ia:DataTriggerBehavior>
                        <!-- When IsObsolete -->
                        <ia:DataTriggerBehavior Binding="{Binding IsObsolete}" Value="True">
                          <ia:ChangePropertyAction Value="#22000000" PropertyName="Background"/>
                          <ia:ChangePropertyAction Value="0.8" PropertyName="Opacity"/>
                        </ia:DataTriggerBehavior>
                      </i:Interaction.Behaviors>
                    </Style>
                    <Style Selector="Border:pointerover">
                      <Setter Property="Opacity" Value="1" />
                    </Style>
                  </Border.Styles>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="350"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Column="1">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <!--<StackPanel Orientation="Horizontal">
                                                    <TextBox Classes="LabelBox" Foreground="#555555" FontSize="12"
                                                        Margin="0 0 10 0"
		                                                Text="{Binding DbVocab.KanjiWriting, Mode=OneWay}" />
                                                    <TextBox Classes="LabelBox" Foreground="#555555" FontSize="12"
                                                        Margin="0 0 0 0"
		                                                Text="{Binding DbVocab.KanaWriting, Mode=OneWay}" />
                                                </StackPanel>-->

                      <StackPanel>

                        <WrapPanel Orientation="Horizontal" Margin="0 2 0 2">
                          <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2" HorizontalAlignment="Left" Padding="5 0 5 0" Width="93"
                                  IsVisible="{Binding ShowBookRanking}" Background="{Binding DbVocab.FrequencyRank, Converter={StaticResource VocabFrequencyToBrushConverter}}">
                            <Border.Styles>
                              <Style Selector="Border">
                                <i:Interaction.Behaviors>
                                  <ia:DataTriggerBehavior Binding="{Binding DbVocab.FrequencyRank}" Value="1">
                                    <ia:ChangePropertyAction Value="Found 1 time in 7905 books." PropertyName="ToolTip.Tip"/>
                                  </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Setter Property="ToolTip.Tip">
                                  <Setter.Value>
                                    <Binding Path="DbVocab.FrequencyRank" StringFormat="{}Found {0} times in 7905 books."/>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </Border.Styles>
                            <DockPanel LastChildFill="True">
                              <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" FontWeight="SemiBold" Opacity="0.75">
                                本
                              </TextBlock>
                              <TextBlock HorizontalAlignment="Center">
                                <TextBlock.Styles>
                                  <Style Selector="TextBlock">
                                    <Setter Property="Text">
                                      <Setter.Value>
                                        <Binding Path="DbVocab.FrequencyRank" Converter="{StaticResource VocabFrequencyToStringConverter}"/>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="Foreground" Value="#555555"/>
                                  </Style>
                                </TextBlock.Styles>
                              </TextBlock>
                            </DockPanel>
                          </Border>

                          <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2" HorizontalAlignment="Left" Padding="5 0 5 0"
                                  IsVisible="{Binding ShowWikipediaRank}" Background="{Binding DbVocab.WikipediaRank, Converter={StaticResource WikipediaRankToBrushConverter}}">
                            <ToolTip.Tip>
                              <Binding Path="DbVocab.WikipediaRank" Converter="{StaticResource IntegerToOrdinalStringConverter}" StringFormat="{}{0} out of 20000 most used word in a study of Japanese Wikipedia articles."/>
                            </ToolTip.Tip>
                            <DockPanel LastChildFill="True">
                              <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" Margin="0 0 6 0" FontWeight="SemiBold">
                                W
                              </TextBlock>
                              <TextBlock HorizontalAlignment="Center">
                                <TextBlock.Styles>
                                  <Style Selector="TextBlock">
                                    <Setter Property="Text">
                                      <Setter.Value>
                                        <Binding Path="DbVocab.WikipediaRank" Converter="{StaticResource IntegerToOrdinalStringConverter}" StringFormat="{}{0} most used"/>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="Foreground" Value="#555555"/>
                                  </Style>
                                </TextBlock.Styles>
                              </TextBlock>
                            </DockPanel>
                          </Border>

                          <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2" HorizontalAlignment="Left" Padding="5 0 5 0"
                                  IsVisible="{Binding ShowJlptLevel}" Background="{Binding DbVocab.JlptLevel, Converter={StaticResource JlptLevelToBrushConverter}}">
                            <ToolTip.Tip>
                              <Binding Path="DbVocab.JlptLevel" StringFormat="{}Part of the vocabulary list for the N{0} level of the Japanese-Language Proficiency Test."/>
                            </ToolTip.Tip>
                            <DockPanel LastChildFill="True">
                              <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" Opacity="1" FontWeight="SemiBold">
                                JLPT
                              </TextBlock>
                              <TextBlock HorizontalAlignment="Right" Margin="5 0 0 0">
                                <TextBlock.Styles>
                                  <Style Selector="TextBlock">
                                    <Setter Property="Text">
                                      <Setter.Value>
                                        <Binding Path="DbVocab.JlptLevel" StringFormat="{}N{0}"/>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="Foreground" Value="#555555"/>
                                  </Style>
                                </TextBlock.Styles>
                              </TextBlock>
                            </DockPanel>
                          </Border>

                          <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2" HorizontalAlignment="Left" Padding="5 0 5 0" IsVisible="{Binding ShowWkLevel}" Background="{Binding DbVocab.WaniKaniLevel, Converter={StaticResource WkLevelToBrushConverter}}">
                            <ToolTip.Tip>
                              <Binding Path="DbVocab.WaniKaniLevel" StringFormat="{}Vocab learned at level {0} on the kanji learning website WaniKani."/>
                            </ToolTip.Tip>
                            <DockPanel LastChildFill="True">
                              <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" Opacity="1" FontWeight="SemiBold">
                                WK
                              </TextBlock>
                              <TextBlock HorizontalAlignment="Right" Margin="5 0 0 0">
                                <TextBlock.Styles>
                                  <Style Selector="TextBlock">
                                    <Setter Property="Text">
                                      <Setter.Value>
                                        <Binding Path="DbVocab.WaniKaniLevel" StringFormat="{}Level {0}"/>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="Foreground" Value="#555555"/>
                                  </Style>
                                </TextBlock.Styles>
                              </TextBlock>
                            </DockPanel>
                          </Border>

                          <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2" HorizontalAlignment="Left" Padding="5 0 5 0">
                            <Border.Styles>
                              <Style Selector="Border">
                                <i:Interaction.Behaviors>
                                  <ia:DataTriggerBehavior Binding="{Binding DbVocab.Categories.Count}" Value="0">
                                    <ia:ChangePropertyAction Value="False" PropertyName="IsVisible"/>
                                  </ia:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                              </Style>
                            </Border.Styles>
                            <TextBlock Text="{Binding DbVocab.Categories, Converter={StaticResource VocabCategoriesToStringConverter}}" FontSize="10"/>
                          </Border>
                        </WrapPanel>


                        <!--TODO: when richtextbox exists-->
                        <!--<controls:BindableRichTextBox Name="MeaningRtb" Margin="0 0 0 5" Padding="0 0 0 0">
                                                        <controls:BindableRichTextBox.Styles>
                                                            <Style Selector="controls:BindableRichTextBox" InheritanceParent="{StaticResource VocabMeaningRichTextBox}">
                                                                <Setter Property="Document" Value="{Binding DbVocab, Mode=OneTime,  Converter={StaticResource VocabMeaningsToStringConverter}}"/>
                                                            </Style>
                                                        </controls:BindableRichTextBox.Styles>
                                                    </controls:BindableRichTextBox>-->

                        <TextBox Name="MeaningRtb" Margin="0 0 0 5" Padding="0 0 0 0" Classes="VocabMeaningRichTextBox">
                          <TextBox.Styles>
                            <Style Selector="TextBox">
                              <Setter Property="Text" Value="{Binding DbVocab, Mode=OneTime,  Converter={StaticResource VocabMeaningsToStringConverter}}"/>
                            </Style>
                          </TextBox.Styles>
                        </TextBox>

                        <Button Name="ExpandButton" Content="Show more meanings" Width="140" HorizontalAlignment="Left" Classes="MiniActionButton ActionButton" Margin="5 0 0 3" IsVisible="{Binding NeedsExpanding}">
                          <i:Interaction.Behaviors>
                            <ia:EventTriggerBehavior EventName="Click">
                              <ia:ChangePropertyAction TargetObject="{Binding ElementName=MeaningRtb}" PropertyName="Document" Value="{Binding DbVocab, Mode=OneTime,  Converter={StaticResource VocabMeaningsToStringConverter}, ConverterParameter=Full}"/>
                              <ia:ChangePropertyAction PropertyName="IsVisible" Value="False"/>
                            </ia:EventTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </Button>
                      </StackPanel>


                      <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="5 0 0 5">
                        <StackPanel.Styles>
                          <Style Selector="StackPanel">
                            <i:Interaction.Behaviors>
                              <ia:DataTriggerBehavior Binding="{Binding SrsEntry}" Value="{x:Null}">
                                <ia:ChangePropertyAction Value="True" PropertyName="IsVisible"/>
                              </ia:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                            <Setter Property="IsVisible" Value="False"/>
                          </Style>
                        </StackPanel.Styles>
                        <Button Content="✙ Add" Width="70" HorizontalAlignment="Left" BorderBrush="#22000000" Command="{Binding DataContext.AddToSrsCommand,
                                            RelativeSource={RelativeSource AncestorType=controls:VocabList}}" CommandParameter="{Binding .}" Classes="MiniActionButton ActionButton"/>
                        <Button Content="✙ Quick add" Width="70" HorizontalAlignment="Left" BorderBrush="#22000000" Margin="8 0 0 0" Command="{Binding DataContext.QuickAddToSrsCommand,
                                            RelativeSource={RelativeSource AncestorType=controls:VocabList}}" CommandParameter="{Binding .}" Classes="MiniActionButton ActionButton" ToolTip.Tip="Add this vocab entry to your SRS list in one click."/>
                      </StackPanel>

                      <controls:SrsVocabEntryProgress Grid.Row="1" DataContext="{Binding SrsEntry, }">
                        <controls:SrsVocabEntryProgress.Styles>
                          <Style Selector="controls|SrsVocabEntryProgress">
                            <i:Interaction.Behaviors>
                              <ia:DataTriggerBehavior Binding="{Binding DataContext}" Value="{x:Null}">
                                <ia:ChangePropertyAction Value="False" PropertyName="IsVisible"/>
                              </ia:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                          </Style>
                        </controls:SrsVocabEntryProgress.Styles>
                      </controls:SrsVocabEntryProgress>
                      <!--<Button Grid.Column="1" Content="Add to my list" Width="120" HorizontalAlignment="Left"
				                                    Command="{Binding DataContext.AddToSrsCommand,
						                                RelativeSource={RelativeSource AncestorType=controls:VocabList}}"
				                                    CommandParameter="{Binding .}" Classes="MiniActionButton ActionButton">
                                                    <Button.Styles>
                                                        <Style Selector="Button">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding SrsEntry}" Value="{x:Null}">
                                                                    <Setter Property="IsVisible" Value="True" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                            <Setter Property="IsVisible" Value="False" />
                                                        </Style>
                                                    </Button.Styles>
                                                </Button>

                                                <controls:SrsVocabEntryProgress Grid.Column="1" DataContext="{Binding SrsEntry, }">
                                                    <controls:SrsVocabEntryProgress.Styles>
                                                        <Style Selector="controls:SrsVocabEntryProgress">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding .}" Value="{x:Null}">
                                                                    <Setter Property="IsVisible" Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:SrsVocabEntryProgress.Styles>
                                                </controls:SrsVocabEntryProgress>-->
                    </Grid>

                    <Border Padding="0 3 0 0">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="*"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Audio button -->
                        <LayoutTransformControl>
                          <LayoutTransformControl.LayoutTransform>
                            <RotateTransform Angle="-90"/>
                          </LayoutTransformControl.LayoutTransform>
                          <Button Grid.Column="0" HorizontalAlignment="Left" Classes="VocabAudioButton MiniActionButton ActionButton" DataContext="{Binding .}" />
                        </LayoutTransformControl>



                        <Grid Grid.Column="1">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                          </Grid.RowDefinitions>
                          <StackPanel Grid.Row="1">
                            <ListBox Classes="VocabWritingPartListbox" Items="{Binding DbVocab, Mode=OneWay,
                                                       Converter={StaticResource KanjiWritingToCharactersConverter},
                                                       }"/>
                          </StackPanel>
                        </Grid>
                        <Grid Grid.Column="2">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                          </Grid.RowDefinitions>
                          <LayoutTransformControl>
                            <Button Grid.Row="1" Content="Kanji" HorizontalAlignment="Right" FontSize="6" ToolTip.Tip="Copy the kanji writing to the clipboard." Command="{Binding DataContext.KanjiCopyCommand,
                                                      RelativeSource={RelativeSource AncestorType=controls:VocabList}}" CommandParameter="{Binding .}" Classes="MiniActionButton ActionButton">
                              <Button.Styles>
                                <Style Selector="Button">
                                  <i:Interaction.Behaviors>
                                    <ia:DataTriggerBehavior Binding="{Binding DbVocab.KanjiWriting}" Value="{x:Null}">
                                      <ia:ChangePropertyAction Value="False" PropertyName="IsVisible"/>
                                    </ia:DataTriggerBehavior>
                                    <ia:DataTriggerBehavior Binding="{Binding DbVocab.KanjiWriting}" Value="">
                                      <ia:ChangePropertyAction Value="False" PropertyName="IsVisible"/>
                                    </ia:DataTriggerBehavior>
                                  </i:Interaction.Behaviors>
                                  <Setter Property="Opacity" Value="0.15"/>
                                  <Setter Property="BorderBrush" Value="Transparent"/>
                                </Style>
                                <Style Selector="Button:pointerover">
                                  <Setter Property="Opacity" Value="1" />
                                  <Setter Property="BorderBrush" Value="#99042880" />
                                </Style>
                              </Button.Styles>
                            </Button>
                            <LayoutTransformControl.LayoutTransform>
                              <RotateTransform Angle="-90"/>
                            </LayoutTransformControl.LayoutTransform>
                          </LayoutTransformControl>
                          <LayoutTransformControl>
                            <Button Content="Kana" HorizontalAlignment="Right" FontSize="6" ToolTip.Tip="Copy the kana writing to the clipboard." Command="{Binding DataContext.KanaCopyCommand,
                                                      RelativeSource={RelativeSource AncestorType=controls:VocabList}}" CommandParameter="{Binding .}" Classes="MiniActionButton ActionButton">
                              <Button.Styles>
                                <Style Selector="Button">
                                  <Setter Property="Opacity" Value="0.15" />
                                  <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                                <Style Selector="Button:pointerover">
                                  <Setter Property="Opacity" Value="1" />
                                  <Setter Property="BorderBrush" Value="#99042880" />
                                </Style>
                              </Button.Styles>
                            </Button>
                            <LayoutTransformControl.LayoutTransform>
                              <RotateTransform Angle="-90"/>
                            </LayoutTransformControl.LayoutTransform>
                          </LayoutTransformControl>
                        </Grid>

                      </Grid>
                    </Border>

                    <Border Grid.Row="1" Grid.ColumnSpan="2" IsVisible="{Binding HasVariants}" BorderThickness="0 1 0 0" BorderBrush="#22000000" Padding="0 2 0 2">
                      <ListBox Classes="VocabVariantList" Items="{Binding ., Mode=OneWay, Converter={StaticResource ExtendedVocabToVariantListConverter}}"/>
                    </Border>
                  </Grid>
                </Border>
              </Border>
            </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

    <!-- SRS ENTRY WINDOW -->

  <Style Selector="TextBlock.KanjiReadingLabel">
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="Foreground" Value="White"/>
  </Style>

    <Style Selector="Border.KanjiReadingLabelBorder" >
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="Width" Value="58"/>
      <Setter Property="Height" Value="NaN"/>
      <Setter Property="Margin" Value="0 0 5 1"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="#CC000000"/>
      <Setter Property="CornerRadius" Value="0"/>
      <Setter Property="Background" Value="#444444"/>
    </Style>

  <Style Selector="ListBox.KanjiReadingsListbox">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <WrapPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="ListBox.KanjiReadingsListbox ListBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <ContentControl Content="{Binding .}">
            <ContentControl.DataTemplates>
              <DataTemplate DataType="{x:Type models:KanjiReading}">
                <Border BorderBrush="#CC000000" BorderThickness="1" Padding="2">
                  <Border.Styles>
                    <Style Selector="Border">
                      <Setter Property="Margin" Value="0 0 5 1" />
                      <Setter Property="Background" Value="White" />
                    </Style>
                    <Style Selector="Border:pointerover">
                      <Setter Property="Background" Value="#FFE0E0E0" />
                    </Style>
                  </Border.Styles>
                  <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="PreviewMouseLeftButtonUp">
                      <ia:InvokeCommandAction Command="{Binding DataContext.FilterReadingCommand,
                                                                  RelativeSource={RelativeSource AncestorType={x:Type controls:KanjiDetails}}}" CommandParameter="{Binding HiraganaReading}"/>
                    </ia:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                  <TextBox Classes="ReadingLabel LabelBox" Text="{Binding ModifiedReading}"/>
                </Border>
              </DataTemplate>
              <DataTemplate DataType="{x:Type models:KanjiReadingLabel}">
                <Border Classes="KanjiReadingLabelBorder">
                  <TextBlock Classes="KanjiReadingLabel LegendText" Text="{Binding Label}"/>
                </Border>
              </DataTemplate>
            </ContentControl.DataTemplates>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style Selector="TextBlock.SettingText" >
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style Selector="TextBlock.SettingCategoryTitle" >
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="Padding" Value="5 0"/>
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="Foreground" Value="#464646"/>
    </Style>

  <Style Selector="TextBox.NextReviewDateLabel">
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
  </Style>

    <Style Selector="TextBox.SrsKanjiInput" >
      <Setter Property="FontSize" Value="18"/>
      <Setter Property="MaxLength" Value="1"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style Selector="TextBox.SrsVocabInput" >
      <Setter Property="FontSize" Value="18"/>
      <Setter Property="MaxLength" Value="999"/>
    </Style>

    <!--<Style Selector="ProgressBar.SrsItemProgressBar" >
        <Setter Property="Value" Value="{Binding SuccessPercentage, Mode=OneWay}" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border BorderBrush="#FF777777" BorderThickness="1" Padding="0" CornerRadius="2"
                            Height="20">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Color="#BB7C7C7C" />
                                <GradientStop Color="#BBAAAAAA" Offset="0.15" />
                                -->
    <!--<GradientStop Color="#FF7C7C7C" Offset="0.85" />-->
    <!--
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            -->
    <!-- Default template -->
    <!--
                            <Grid>
                                <Grid.Styles>
                                    <Style Selector="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                <Setter Property="IsVisible" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Styles>
                                <ToolTip.Tip>
                                    <Border>
                                        <StackPanel>
                                            <TextBlock>
                                                <TextBlock.Styles>
                                                    <Style Selector="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                                <Setter Property="Text" Value="Never reviewed." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ReviewCount}" Value="1">
                                                                <Setter Property="Text" Value="Reviewed 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="ReviewCount"
                                                                    StringFormat="{}Reviewed {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Styles>
                                            </TextBlock>
                                            <TextBlock>
                                                <TextBlock.Styles>
                                                    <Style Selector="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SuccessCount}" Value="0">
                                                                <Setter Property="Text" Value="Never succeeded." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding SuccessCount}" Value="1">
                                                                <Setter Property="Text" Value="Succeeded 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="SuccessCount"
                                                                    StringFormat="{}Succeeded {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Styles>
                                            </TextBlock>
                                            <TextBlock>
                                                <TextBlock.Styles>
                                                    <Style Selector="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FailureCount}" Value="0">
                                                                <Setter Property="Text" Value="Never failed." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FailureCount}" Value="1">
                                                                <Setter Property="Text" Value="Failed 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="FailureCount"
                                                                    StringFormat="{}Failed {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Styles>
                                            </TextBlock>
                                        </StackPanel>
                                    </Border>
                                </ToolTip.Tip>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Name="PART_Track" CornerRadius="2"
                                        BorderThickness="0" BorderBrush="#333333">
                                    <Rectangle Name="PART_Indicator" HorizontalAlignment="Left"
                                               RadiusX="2" RadiusY="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                                <GradientStop Color="#FF26A861"/>
                                                <GradientStop Color="#FF0D5D31" Offset="0.95"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                                <TextBlock Text="{Binding SuccessPercentage,
                                    Converter={StaticResource PercentageToStringConverter}}"
                                           FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="Black">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-1" Y="-1" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock Text="{Binding SuccessPercentage,
                                    Converter={StaticResource PercentageToStringConverter}}"
                                           FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="White" />
                            </Grid>
                            
                            -->
    <!-- "No success" template -->
    <!--
                            <Grid>
                                <Grid.Styles>
                                    <Style Selector="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                <Setter Property="IsVisible" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="IsVisible" Value="False" />
                                    </Style>
                                </Grid.Styles>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10"
                                       Text="Not reviewed yet" Foreground="#CC000000" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style Selector="ProgressBar.SrsItemProgressBar" >
      <Setter Property="Value" Value="{Binding CompletionPercentage, Mode=OneWay}"/>
      <Setter Property="Minimum" Value="0"/>
      <Setter Property="Maximum" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ProgressBar">
            <Border BorderBrush="#FF777777" BorderThickness="1" Padding="0" CornerRadius="2" Height="20">
              <Border.Background>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                  <GradientStop Color="#BB7C7C7C"/>
                  <GradientStop Color="#BBAAAAAA" Offset="0.15"/>
                  <!--<GradientStop Color="#FF7C7C7C" Offset="0.85" />-->
                </LinearGradientBrush>
              </Border.Background>
              <Grid>
                <!-- Default template -->
                <Grid>
                  <ToolTip.Tip>
                    <Border>
                      <StackPanel>
                        <TextBlock>
                          <TextBlock.Styles>
                            <Style Selector="TextBlock">
                              <i:Interaction.Behaviors>
                                <ia:DataTriggerBehavior Binding="{Binding ReviewCount}" Value="0">
                                  <ia:ChangePropertyAction Value="Never reviewed." PropertyName="Text"/>
                                </ia:DataTriggerBehavior>
                                <ia:DataTriggerBehavior Binding="{Binding ReviewCount}" Value="1">
                                  <ia:ChangePropertyAction Value="Reviewed 1 time." PropertyName="Text"/>
                                </ia:DataTriggerBehavior>
                              </i:Interaction.Behaviors>
                              <Setter Property="Text">
                                <Setter.Value>
                                  <Binding Path="ReviewCount" StringFormat="{}Reviewed {0} times."/>
                                </Setter.Value>
                              </Setter>
                            </Style>
                          </TextBlock.Styles>
                        </TextBlock>
                        <TextBlock>
                          <TextBlock.Styles>
                            <Style Selector="TextBlock">
                              <i:Interaction.Behaviors>
                                <ia:DataTriggerBehavior Binding="{Binding SuccessCount}" Value="0">
                                  <ia:ChangePropertyAction Value="Never succeeded." PropertyName="Text"/>
                                </ia:DataTriggerBehavior>
                                <ia:DataTriggerBehavior Binding="{Binding SuccessCount}" Value="1">
                                  <ia:ChangePropertyAction Value="Succeeded 1 time." PropertyName="Text"/>
                                </ia:DataTriggerBehavior>
                              </i:Interaction.Behaviors>
                              <Setter Property="Text">
                                <Setter.Value>
                                  <Binding Path="SuccessCount" StringFormat="{}Succeeded {0} times."/>
                                </Setter.Value>
                              </Setter>
                            </Style>
                          </TextBlock.Styles>
                        </TextBlock>
                        <TextBlock>
                          <TextBlock.Styles>
                            <Style Selector="TextBlock">
                              <i:Interaction.Behaviors>
                                <ia:DataTriggerBehavior Binding="{Binding FailureCount}" Value="0">
                                  <ia:ChangePropertyAction Value="Never failed." PropertyName="Text"/>
                                </ia:DataTriggerBehavior>
                                <ia:DataTriggerBehavior Binding="{Binding FailureCount}" Value="1">
                                  <ia:ChangePropertyAction Value="Failed 1 time." PropertyName="Text"/>
                                </ia:DataTriggerBehavior>
                              </i:Interaction.Behaviors>
                              <Setter Property="Text">
                                <Setter.Value>
                                  <Binding Path="FailureCount" StringFormat="{}Failed {0} times."/>
                                </Setter.Value>
                              </Setter>
                            </Style>
                          </TextBlock.Styles>
                        </TextBlock>
                      </StackPanel>
                    </Border>
                  </ToolTip.Tip>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Border Name="PART_Track" CornerRadius="2" BorderThickness="0" BorderBrush="#333333">
                    <Rectangle Name="PART_Indicator" HorizontalAlignment="Left"><!--TODO: RadiusX="2" RadiusY="2"-->
                      <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                          <GradientStop Color="#FF26A861"/>
                          <GradientStop Color="#FF0D5D31" Offset="0.95"/>
                        </LinearGradientBrush>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Border>
                  <TextBlock Text="{Binding CompletionPercentage,
                                      Converter={StaticResource PercentageToStringConverter}}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="SemiBold" Foreground="Black">
                    <TextBlock.RenderTransform>
                      <TranslateTransform X="-1" Y="-1"/>
                    </TextBlock.RenderTransform>
                  </TextBlock>
                  <TextBlock Text="{Binding CompletionPercentage,
                                      Converter={StaticResource PercentageToStringConverter}}" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="SemiBold" Foreground="White"/>
                </Grid>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- SRS Page -->
    <Style Selector="TextBlock.SrsStatText" >
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="Foreground" Value="#CCFFFFFF"/>
      <Setter Property="Margin" Value="5 0 5 0"/>
    </Style>

    <Style Selector="ListBox.ItemsPerLevelListbox" >
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0 1 0 0"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Template" Value="{StaticResource PaddinglessListbox}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <UniformGrid Rows="1" ClipToBounds="True"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  <Style Selector="ListBox.ItemsPerLevelListbox ListBoxItem">
      <Setter Property="Template" Value="{StaticResource ItemsPerLevelListboxItem}" />
  </Style>


  <Style Selector="ListBox.ItemsPerLevelGroupListbox" >
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Items">
        <Setter.Value>
          <Binding Path="ItemsPerLevelGroup" Source="{x:Static business:SrsBusiness.Instance}"/>
        </Setter.Value>
      </Setter>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <UniformGrid HorizontalAlignment="Stretch" Rows="1"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>
  <Style Selector="ListBox.ItemsPerLevelGroupListbox ListBoxItem">
    <Setter Property="Template" Value="{StaticResource ItemsPerLevelGroupListboxItem}"/>
  </Style>

    <!-- SRS REVIEW -->

    <Style Selector="ProgressBar.SrsReviewProgressBar" >
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ProgressBar">
            <Border BorderBrush="#FF777777" BorderThickness="1" Padding="0" Height="6">
              <Border.Background>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                  <GradientStop Color="#BB7C7C7C"/>
                  <GradientStop Color="#BBAAAAAA" Offset="0.15"/>
                </LinearGradientBrush>
              </Border.Background>
              <Grid>
                <!-- Default template -->
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Border Name="PART_Track" BorderThickness="0" BorderBrush="#333333">
                    <Rectangle Name="PART_Indicator" HorizontalAlignment="Left">
                      <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                          <GradientStop Color="#DD7C7C7C"/>
                          <GradientStop Color="#DD343434" Offset="0.85"/>
                        </LinearGradientBrush>
                      </Rectangle.Fill>
                    </Rectangle>
                  </Border>
                </Grid>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="TextBlock.SrsReviewsCountIndicator" >
      <Setter Property="FontSize" Value="11"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="VerticalAlignment" Value="Top"/>
      <Setter Property="Margin" Value="0 0 5 0"/>
    </Style>

    <!-- SETTINGS -->

    <Style Selector="ListBox.SettingUserResourceListBox" >
      <Setter Property="Height" Value="150"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
      <Setter Property="Background" Value="{x:Null}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Horizontal"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  <Style Selector="ListBox.SettingUserResourceListBox ListBoxItem">
    <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <Border BorderBrush="{StaticResource FadedBorderBrush}" BorderThickness="1" Margin="0 0 5 0" Padding="5 3" Width="200">
              <Border.Styles>
                <Style Selector="Border">
                  <Setter Property="Background" Value="White"/>
                </Style>
              </Border.Styles>
              <i:Interaction.Behaviors>
                <ia:DataTriggerBehavior Value="True">
                  <ia:DataTriggerBehavior.Binding>
                    <MultiBinding Converter="{StaticResource ComparablesToBooleanConverter}">
                      <Binding Path="Name"/>
                      <Binding Path="DataContext.SelectedSetName" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                    </MultiBinding>
                  </ia:DataTriggerBehavior.Binding>
                  <ia:ChangePropertyAction Value="True" PropertyName="Tag"/>
                  <ia:ChangePropertyAction Value="#CFEFBE" PropertyName="Background"/>
                </ia:DataTriggerBehavior>
              </i:Interaction.Behaviors>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="{Binding Name}" FontSize="16" Margin="0 0 0 0" HorizontalAlignment="Center"/>

                <TextBlock Grid.Row="1" FontSize="12" Margin="0 0 0 2" HorizontalAlignment="Center">
                  <TextBlock.Styles>
                    <Style Selector="TextBlock">
                      <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding Author}" Value="{x:Null}">
                          <ia:ChangePropertyAction Value="Unknown author" PropertyName="Text"/>
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding Author}" Value="">
                          <ia:ChangePropertyAction Value="Unknown author" PropertyName="Text"/>
                        </ia:DataTriggerBehavior>
                      </i:Interaction.Behaviors>
                      <Setter Property="Text">
                        <Setter.Value>
                          <Binding Path="Author" StringFormat="{}by {0}"/>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </TextBlock.Styles>
                </TextBlock>

                <TextBlock Grid.Row="2" FontSize="11" TextWrapping="Wrap" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Description}"/>

                <UniformGrid Grid.Row="3" Rows="1">
                  <Button Classes="MiniActionButton ActionButton" Command="{Binding DataContext.BrowseSetCommand,
                                                      RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" Content="Browse" ToolTip.Tip="Open the set directory in the explorer." Margin="0 0 5 0"/>
                  <Button Classes="MiniActionButton ActionButton" Command="{Binding DataContext.SelectSetCommand,
                                                      RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" Content="Use this set" ToolTip.Tip="Sets this set to be used from now on."
                                           IsVisible="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border},
                                                      Converter={StaticResource NullValueToVisibilityConverter}}"/>
                  <TextBlock Text="In use" VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border}}" />
                </UniformGrid>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
  </Style>

    <!-- NAVIGATION PANEL -->

    <Style Selector="Grid.NavigationPanel" >
      <Setter Property="Height" Value="60"/>
    </Style>

    <Style Selector="Grid.NavigationPanelToolbar" >

    </Style>

    <Style Selector="Button.NavigationPanelPreviousButton" >

    </Style>

    <Style Selector="Button.NavigationPanelNextButton" >

    </Style>

    <Style Selector="Grid.NavigationPanelTab" >
      <Setter Property="Opacity" Value="0.8"/>
    </Style>
  <Style Selector="Grid.NavigationPanelTab:not(:pointerover)">
    <Setter Property="Opacity" Value="1" />
  </Style>


  <Style Selector="Grid.NavigationPanelKanjiTab">
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}" Value="{x:Static models:NavigationPageEnum.Kanji}">
        <ia:ChangePropertyAction Value="1" PropertyName="Opacity"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
    <Setter Property="Background" Value="{StaticResource KanjiTabGradient}"/>
  </Style>


  <Style Selector="Grid.NavigationPanelSrsTab">
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}" Value="{x:Static models:NavigationPageEnum.Srs}">
        <ia:ChangePropertyAction Value="1" PropertyName="Opacity"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
    <Setter Property="Background" Value="{StaticResource SrsTabGradient}"/>
  </Style>

  <Style Selector="Grid.NavigationPanelVocabTab">
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}" Value="{x:Static models:NavigationPageEnum.Vocab}">
        <ia:ChangePropertyAction Value="1" PropertyName="Opacity"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
    <Setter Property="Background" Value="{StaticResource VocabTabGradient}"/>
  </Style>

  <Style Selector="Grid.NavigationPanelSettingsTab">
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}" Value="{x:Static models:NavigationPageEnum.Settings}">
        <ia:ChangePropertyAction Value="1" PropertyName="Opacity"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
    <Setter Property="Background" Value="{StaticResource SettingsTabGradient}"/>
  </Style>

  <Style Selector="Grid.NavigationPanelHomeTab">
    <i:Interaction.Behaviors>
      <ia:DataTriggerBehavior Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}" Value="{x:Static models:NavigationPageEnum.Home}">
        <ia:ChangePropertyAction Value="1" PropertyName="Opacity"/>
      </ia:DataTriggerBehavior>
    </i:Interaction.Behaviors>
    <Setter Property="Background" Value="{StaticResource HomeTabGradient}"/>
  </Style>

    <Style Selector="TextBlock.NavigationPanelTabTitleSubCommon" >
      <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>
  <Style Selector="TextBlock.NavigationPanelTabTitleSubShadow">
    <Setter Property="Foreground" Value="#99000000"/>
    <Setter Property="RenderTransform">
      <Setter.Value>
        <TranslateTransform X="-2" Y="-2"/>
      </Setter.Value>
    </Setter>
  </Style>


    <Style Selector="TextBox.NavigationPanelTabTitle" >
      <Setter Property="Margin" Value="0 0 0 7"/>
      <Setter Property="FontSize" Value="24"/>
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TextBox">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
              <LayoutTransformControl>
                <TextBlock Classes="NavigationPanelTabTitleSubShadow NavigationPanelTabTitleSubCommon" Text="{TemplateBinding Text}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}"/>
              </LayoutTransformControl>
              <LayoutTransformControl>
                <TextBlock Classes="NavigationPanelTabTitleSubCommon" Text="{TemplateBinding Text}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}"/>
              </LayoutTransformControl>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  <Style Selector="TextBox.NavigationPanelTabTitle LayoutTransformControl">
    <Setter Property="LayoutTransform">
      <Setter.Value>
        <!--NavigationPanelTabTitleScaleTransform-->
        <ScaleTransform ScaleX="0.7" ScaleY="1.2"/>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="TextBox.NavigationPanelTabTitleKanji">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Classes="NavigationPanelTabTitleSubShadow NavigationPanelTabTitleSubCommon" Text="{TemplateBinding Text}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}"/>
            <TextBlock Classes="NavigationPanelTabTitleSubCommon" Text="{TemplateBinding Text}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style Selector="TextBox.NavigationPanelTabTitleKanji LayoutTransformControl">
    <Setter Property="LayoutTransform" Value="{x:Null}" />
  </Style>

    <Style Selector="Button.NavigationPanelButton" >
      <Setter Property="Opacity" Value="0"/>
    </Style>

    <!--<Style Selector="controls:OutlinedTextBlock" x:Key="NavigationPanelTabTitle">
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="FontSize" Value="26" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="1.2" ScaleX="0.8" />
            </Setter.Value>
        </Setter>

        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>-->

    <!--<Style Selector="TextBox.NavigationPanelTabSubtitle" InheritanceParent="{StaticResource LabelBox}" > 
    </Style>-->

    <Style Selector="HeaderedContentControl">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Border>
              <StackPanel>
                <ContentPresenter TextBlock.FontWeight="Bold" Content="{TemplateBinding Header}" />
                <Border
                    BorderBrush="{TemplateBinding Background}"
                    BorderThickness="2"
                    CornerRadius="5">
                  <ContentPresenter Content="{TemplateBinding Content}" />
                </Border>
              </StackPanel>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="BorderBrush" Value="#D5DFE5"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
            <Grid UseLayoutRounding="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="6"/>
              </Grid.RowDefinitions>
              <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}"/>
              <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                <!--TODO: accesskey?-->
                <ContentPresenter Content="{TemplateBinding Header}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
              </Border>
              <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
              <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                <Border.OpacityMask>
                  <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                    <Binding ElementName="Header" Path="ActualWidth"/>
                    <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                    <Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight"/>
                  </MultiBinding>
                </Border.OpacityMask>

                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                  <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"/>
                </Border>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Styles>