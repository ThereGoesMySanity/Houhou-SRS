<?xml version="1.0" ?><Window xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Kanji.Interface.Controls"
                    xmlns:converters="clr-namespace:Kanji.Interface.Converters"
                    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
                    xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
                     x:Class="Kanji.Interface.Views.EditSrsEntryWindow" Height="500" Width="500" KeyDown="OnKeyDown">
    <Window.Styles>
        <Style Selector="Window">
            <i:Interaction.Behaviors>
                <ia:DataTriggerBehavior Binding="{Binding IsNew}" Value="True">
                    <ia:ChangePropertyAction Value="SRS item creation" PropertyName="Title"/>
                </ia:DataTriggerBehavior>
            </i:Interaction.Behaviors>
            <Setter Property="Background" Value="#E4FBD0"/>
            <Setter Property="Title" Value="SRS item editing"/>
        </Style>
    </Window.Styles>
    
    <Border Padding="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/> <!-- Meaning column -->
                <ColumnDefinition Width="*"/> <!-- Reading column -->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Errors row -->
                <RowDefinition Height="Auto"/> <!-- SRS association & progress row -->
                <RowDefinition Height="Auto"/> <!-- Meanings/readings row -->
                <RowDefinition Height="*"/> <!-- Meaning/reading notes row -->
                <RowDefinition Height="Auto"/> <!-- Tags row -->
                <RowDefinition Height="Auto"/> <!-- Action buttons row -->
            </Grid.RowDefinitions>
            
            <!-- Error message -->
            <TextBox Grid.ColumnSpan="2" Margin="0 0 0 5" Text="{Binding ErrorMessage}" Classes="ErrorLabel LabelBox" IsVisible="{Binding ErrorMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
            
            <!-- SRS progress and association -->
            <Grid Grid.ColumnSpan="2" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                
                <!-- Associated kanji panel -->
                <Grid Grid.RowSpan="2" Margin="0 0 10 0" HorizontalAlignment="Center" IsVisible="{Binding Entry.AssociatedKanji, Converter={x:Static ObjectConverters.IsNotNull}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.ColumnSpan="2" Classes="LegendText" Text="Kanji character:"/>
                    <TextBox Grid.Row="1" Classes="SrsKanjiInput" Text="{Binding AssociatedKanjiString, Mode=TwoWay}"/>
                  <Button Grid.Column="1" Grid.Row="1" Margin="0 0 0 0"
                          Command="{Binding ApplyAssociatedKanjiCommand}" ToolTip.Tip="Update fields" Classes="ImageActionButton"
                          IsEnabled="{Binding AssociatedKanji, Converter={x:Static ObjectConverters.IsNotNull}}" Content="/Data/UI/DownIcon.png"/>
                </Grid>

                <!-- Associated vocab panel -->
                <Grid Grid.RowSpan="2" Margin="0 0 10 0" IsVisible="{Binding Entry.AssociatedVocab, Converter={x:Static ObjectConverters.IsNotNull}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.ColumnSpan="2" Classes="LegendText" Text="Vocab writing:"/>
                    <TextBox Grid.Row="1" Classes="SrsVocabInput" Text="{Binding AssociatedVocabString, Mode=TwoWay}"/>
                  <Button Classes="ImageActionButton" Grid.Column="1" Grid.Row="1" Margin="0 0 0 0" Command="{Binding ApplyAssociatedVocabCommand}" ToolTip.Tip="Update fields"
                          IsEnabled="{Binding AssociatedVocab, Converter={x:Static ObjectConverters.IsNotNull}}" Content="/Data/UI/DownIcon.png"/>
                </Grid>

                <!-- Entry progress -->
                <Grid Grid.Column="1">
                    <Grid DockPanel.Dock="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Margin="0 0 5 0" Classes="LegendText">
                          <i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior Binding="{Binding Entry.SuspensionDate, Converter={x:Static ObjectConverters.IsNull}}" Value="True">
                              <ia:ChangePropertyAction Value="Next review:" PropertyName="Text"/>
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior Binding="{Binding Entry.SuspensionDate, Converter={x:Static ObjectConverters.IsNull}}" Value="False">
                              <ia:ChangePropertyAction PropertyName="Text" Value="Next review if resumed:"/>
                            </ia:DataTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </TextBlock>
                        <TextBox Grid.Column="1" Classes="NextReviewDateLabel LabelBox" Text="{Binding Entry.NextAnswerDate,
                              Converter={StaticResource DateTimeToStringConverter},
                              ConverterParameter={x:Static converters:DateTimeToStringConversionEnum.Relative},
                              Mode=OneWay}" ToolTip.Tip="{Binding Entry.NextAnswerDate,
                              Converter={StaticResource DateTimeToStringConverter},
                              ConverterParameter={x:Static converters:DateTimeToStringConversionEnum.Absolute},
                              Mode=OneWay}" IsVisible="{Binding !IsEditingDate}"/>

                      <DatePicker Name="ReviewDatePicker" Grid.Column="1" SelectedDate="{Binding Entry.NextAnswerDate}" IsVisible="{Binding IsEditingDate}" Focusable="True"/>
                        <Button Grid.Column="2" Command="{Binding ToggleDateEditCommand}" Margin="10 0 0 0" Width="70" 
                                HorizontalAlignment="Right" ToolTip.Tip="Edit the next review date manually (CTRL+E)."
                                Classes="MiniActionButton ActionButton">
                          <i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior Binding="{Binding IsEditingDate}" Value="True">
                              <ia:ChangePropertyAction Value="Confirm" PropertyName="Content"/>
                              <ia:ChangePropertyAction Value="Confirm the review date." PropertyName="ToolTip.Tip"/>
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior Binding="{Binding IsEditingDate}" Value="False">
                              <ia:ChangePropertyAction Value="Edit" PropertyName="Content"/>
                              <ia:ChangePropertyAction Value="Edit the next review date manually (CTRL+E)." PropertyName="ToolTip.Tip"/>
                            </ia:DataTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </Button>
                        
                        <UniformGrid Columns="3" Grid.Row="1" Grid.ColumnSpan="3" Margin="0 3 0 0">
                            <Button Classes="MiniActionButton ActionButton" Command="{Binding DateToNowCommand}" Content="Reset date" ToolTip.Tip="Set the next review date to now (CTRL+R)."/>
                            <Button Classes="MiniActionButton ActionButton" Command="{Binding DateToNeverCommand}" Content="Never review" ToolTip.Tip="Set the next review date to never (CTRL+N)." Margin="5 0"/>
                            <Button Classes="MiniActionButton ActionButton" Command="{Binding ToggleSuspendCommand}">
                              <i:Interaction.Behaviors>
                                <ia:DataTriggerBehavior Binding="{Binding Entry.SuspensionDate, Converter={x:Static ObjectConverters.IsNull}}" Value="True">
                                  <ia:ChangePropertyAction Value="Suspend" PropertyName="Content"/>
                                  <ia:ChangePropertyAction Value="Suspends the item. The item will not appear in reviews until you resume it (CTRL+S)." PropertyName="ToolTip.Tip"/>
                                </ia:DataTriggerBehavior>
                                <ia:DataTriggerBehavior Binding="{Binding Entry.SuspensionDate, Converter={x:Static ObjectConverters.IsNull}}" Value="False">
                                  <ia:ChangePropertyAction Value="Resume" PropertyName="Content"/>
                                  <ia:ChangePropertyAction Value="Resumes the SRS progression (CTRL+S)." PropertyName="ToolTip.Tip"/>
                                </ia:DataTriggerBehavior>
                              </i:Interaction.Behaviors>
                            </Button>
                        </UniformGrid>
                    </Grid>
                </Grid>
                <!--<ProgressBar Grid.Column="1" Grid.Row="1" Classes="SrsItemProgressBar" DataContext="{Binding Entry}" Margin="0 5 0 0" />-->
                
                <!-- Entry level -->
                <controls:SrsLevelPicker Grid.ColumnSpan="2" Grid.Row="2" Margin="0 3 0 0" DataContext="{Binding SrsLevelPickerVm}"/>
            </Grid>

            <!-- Meanings field -->
            <StackPanel Grid.Row="2" Margin="0 5 3 0">
                <TextBlock Classes="LegendText" Text="Accepted meanings:"/>
                <TextBox Height="40" MaxLength="300" TextWrapping="Wrap" Text="{Binding Entry.Meanings, Mode=TwoWay}" ToolTip.Tip="Meanings separated with a comma."/>
            </StackPanel>

            <!-- Readings field -->
            <StackPanel Grid.Row="2" Grid.Column="1" Margin="3 5 0 0">
                <TextBlock Classes="LegendText" Text="Accepted readings:"/>
                <controls:CommandTextBox Text="{Binding Entry.Readings, Mode=TwoWay}" Height="40" MaxLength="100" TextWrapping="Wrap" IsKanaInput="True" ToolTip.Tip="Readings separated with a comma."/>
            </StackPanel>
            
            <!-- Meaning notes field -->
            <Grid Grid.Row="3" Margin="0 5 3 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Classes="LegendText" Text="Meaning notes:"/>
                <Decorator Grid.Row="1">
                    <TextBox MaxLength="1000" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding Entry.MeaningNote, Mode=TwoWay}">
                      <TextBox.Styles>
                        <Style Selector="TextBlock[Name=watermark]">
                          <Setter Property="HorizontalAlignment" Value="Center"/>
                          <Setter Property="TextAlignment" Value="Center"/>
                          <Setter Property="VerticalAlignment" Value="Center"/>
                          <Setter Property="TextWrapping" Value="Wrap"/>
                          <Setter Property="Padding" Value="8"/>
                        </Style>
                      </TextBox.Styles>
                        <TextBox.Watermark>
                                Optional meaning notes (mnemonics, details, remarks...).&#x0a;
                                These notes will be shown in reviews after you submit an answer.
                        </TextBox.Watermark>
                    </TextBox>
                </Decorator>
            </Grid>

            <!-- Reading notes field -->
            <Grid Grid.Row="3" Grid.Column="1" Margin="3 5 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Classes="LegendText" Text="Reading notes:"/>
                <Decorator Grid.Row="1">
                    <TextBox MaxLength="1000" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding Entry.ReadingNote, Mode=TwoWay}">
                      <TextBox.Styles>
                        <Style Selector="TextBlock[Name=watermark]">
                          <Setter Property="HorizontalAlignment" Value="Center"/>
                          <Setter Property="TextAlignment" Value="Center"/>
                          <Setter Property="VerticalAlignment" Value="Center"/>
                          <Setter Property="TextWrapping" Value="Wrap"/>
                          <Setter Property="Padding" Value="8"/>
                        </Style>
                      </TextBox.Styles>
                        <TextBox.Watermark>
                                Optional reading notes (mnemonics, details, remarks...).&#x0a;
                                These notes will be shown in reviews after you submit an answer.
                        </TextBox.Watermark>
                    </TextBox>
                </Decorator>
            </Grid>
            
            <!-- Tags field row -->
            <StackPanel Grid.Row="4" Grid.ColumnSpan="2" Margin="0 5 0 5">
                <TextBlock Classes="LegendText" Text="Tags (optional):"/>
                <TextBox Height="40" MaxLength="300" TextWrapping="Wrap" Text="{Binding Entry.Tags, Mode=TwoWay}" ToolTip.Tip="Tags must be separated with a comma. Tags can be anything you want and are used for filtering purposes. Leave blank if you are not sure."/>
            </StackPanel>
            
            <!-- Action button row -->
            <UniformGrid Grid.Row="5" Grid.ColumnSpan="2" Rows="1">
                <Button Classes="MiniActionButton ActionButton" Content="Cancel changes" Margin="3 5 3 0" Command="{Binding CancelCommand}" IsCancel="True" ToolTip.Tip="Cancel any changes you have made (Escape)."/>
                <Button Classes="MiniActionButton ActionButton" Content="Delete this item" Margin="0 5 3 0" Command="{Binding DeleteCommand}" ToolTip.Tip="Delete this SRS item (CTRL+Delete)." IsVisible="{Binding !IsNew}"/>
                <Button Classes="ActionButton" Margin="3 5 0 0" Command="{Binding SubmitCommand}" ToolTip.Tip="Save the changes you have made (CTRL+Enter)." IsEnabled="{Binding !IsSending}">
                  <i:Interaction.Behaviors>
                    <ia:DataTriggerBehavior Binding="{Binding IsNew}" Value="True">
                      <ia:ChangePropertyAction Value="Add this item" PropertyName="Content"/>
                    </ia:DataTriggerBehavior>
                    <ia:DataTriggerBehavior Binding="{Binding IsNew}" Value="False">
                      <ia:ChangePropertyAction Value="Save changes" PropertyName="Content"/>
                    </ia:DataTriggerBehavior>
                  </i:Interaction.Behaviors>
                </Button>
            </UniformGrid>
        </Grid>
    </Border>
</Window>